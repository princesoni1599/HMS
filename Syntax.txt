-------------------------------- C R E A T E    F I R S T    F R A M E------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
from tkinter import *
from PIL import Image,ImageTk 
#-----------------------------
Link other .py files  :-
from <fileName> import <functionName>
#-----------------------------

SYNTAX:-    class ClassName:
                def __init__(self.root1):
                    self.root = root1
                    self.root.title = ("<title Name>")
                    self.root.geometry(<width>x<height>+<MARGIN_FromXaxis>+<MARGIN_FromYaxis>)
            
            if __name__ == "__main__":
                root1 = Tk()
                objectName = ClassName(root1)
                root1.mainloop()


EXAMPLE:-   class HMS:
                def __init__(self,root):
                    self.root = root
                    self.root.title("Hostel Management System")
                    self.root.iconbitmap("C:/Users/BHANU/Desktop/Hostel Management System (MP)/Images/Logo.ico")              # self.root.iconbitmap('path') add icon instead of feather 
                    self.root.geometry("1550x800+0+0")
            if __name__ == "__main__":
                root = Tk()
                obj = HMS(root)
                root.mainloop()





------------------------------------- F R A M E ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    frameName1 = Frame(<windowName>, bd=<borderSize> , relief=RIDGE)
            frameName1.place(x=<distanceFromXaxis> , y=<distanceFromYaxis> ,width=<integer>,height=<integer>)


EXAMPLE:-   mainFrame = Frame(self.root,bd=4,relief=RIDGE)
            mainFrame.place(x=0,y=190,width=1550,height=620)




------------------------------------- L A B E L   F R A M E (frame that contains label already in it)----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    labelFrameName = LabelFrame(<windowName>, bd=<borderSize> , relief=RIDGE , text = "<text to show>", padx=<integer> , font=("font name",<fontSize>,"<fontStyle>"))
            labelFrameName.place(x=<>, y=<> , width=<>, height=<>)

-------------------------------- C H A N G E  I C O N   O F   S O F T W A R E-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    self.root.iconbitmap("path/iconImageName.ico")   <-- NOTE: image should be of .ico  format/extension  

EXAMPLE:-   self.root.iconbitmap("C:/Users/BHANU/Desktop/Hostel Management System (MP)/Images/Logo.ico") 




--------------------------------- L A B E L --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    lableName1 = Label(<window name> , title="<title name>" , font="(<font name>",<fontSizeIn-integer>, "fontStyle"), bg="<backgroundColor>",fg="<fontColor>")
            lableName1.place(x=<distanceFromXaxis> , y=<distanceFromYaxis> ,width=<integer>,height=<integer>)

Example:    lblTitle = Label(self.root, text="HOSTEL MANAGEMENT SYSTEM",font=("times new roman",40,"bold"),bg="black",fg="gold") # OR ->  lblTitle = Label(self.root, text="Hostel Management System",font=("times new roamn",40,"bold"),bg="black",fg="gold",bd=4,relief=RIDGE)
            lblTitle.place(x=0,y=140,width=1550,height=60)




----------------------------------- I M A G E -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    imgName1 = Image.open("path")
            imgName1 = imgName1.resize((<height>,<width>), Image.ANTIALIAS)

            self.varName1 = ImageTk.PhotoImage(imgName1)

            labelName1 = Label(<window name>, image=self.varName1, bd=<borderSizeInteger> , relief=RIDGE)
            labelName1.place(x=<distanceFromXaxis> , y=<distanceFromYaxis> ,width=<integer>,height=<integer>)


EXAMPLE:-   logoImg = Image.open("C:/Users/BHANU/Desktop/Hostel Management System (MP)/Images/Logo.png")
            logoImg = logoImg.resize((140,140), Image.ANTIALIAS)
            self.logoImage = ImageTk.PhotoImage(logoImg)
            lblLogo = Label(self.root, image = self.logoImage,bd=2,relief=RIDGE)
            lblLogo.place(x=0,y=0,width=140,height=140)




-------------------------------- M U L T I P L E   B U T T O Ns  IN  G R I D   F O R M --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    varName = Button (<windowName>, text="<Button Name>",command=<onclickEventFUNCTIOname>,width=<integer> , font=("FontName", <fontSize>,"fontStyle"),bg="backgroundColor>",fg="fontColor>",bd=<borderSize>, cursor="<cursorType>")
            varName.grid(row=<rowNumber> , column=<columnNumber>, pady=<Margin between buttons>)

EXAMPLE:-   cust_btn =Button(btn_frame,text="CUSTOMER",command=self.cust_details,width=22, font=("times new roman",14,"bold"),bg="black",fg="gold",bd=0,cursor="hand2") #Cursor pointer type / Width added to fill
            cust_btn.grid(row=0,column=0,pady=1)


----------------------------------- E N T R Y    F I E L D ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    field1st = Label(<windoName> , text = "<FEILD NAME>", font = ("font name",<fontSize> ,"Fontstyle"),padx=<integer>, pady=<integer>)
            field1st.grid(row=<Rowumber>, column=<columnNumber>,sticky=W)

                    #from tkinter import tkinter
            varField1st = ttk.Entry(<windowName>, width=<integer>, font=(),width=<integer>)
            varField1st.grid(row= <Rowumber>, column=<columnNumber+1>)


----------------------------------- S C R O L L  B A R   X & Y ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    varName_horizntl = ttk.Scrollbar(<windowName>,orient=HORIZONTAL)
            varName_vertical = ttk.Scrollbar(<windowName>,orient=VERTICAL)


----------------------------------- T A B L E ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SYNTAX:-    self.tableName = ttk.Treeview(<windowName>, column=("<columnName1>",<columnName2>",<columnName3>",<columnName4>,....",))



==========================================================================================================================================================================================================================================================================================
=============================================== M Y   P A R T   3/6  ===========================================================================================================================================================================================================================================


============================================================    BELOW CODE MUST BE WRITTEN JUST AFTER THE CLASS's FIRST FUNCTION __init__ after geometry ==============================================================================================================================================================================================================================

step1> create database:-
                            open XAMPP -> START Apache & MySQL
                            open Workbench -> create (+) Database -> Type Database name -> OK

                            type below query:-
                            CREATE DATABASE databaseName;   // Click on 3rd Icon (Thunder)
                                                            //Refresh to see created database
                            
                            goto TABLE of database created -> rightClick -> create Table -> double Click to add table columns -> OK ->Apply -> Finish ->close current Window only

                            goto vsCode -> import mysql.connector


-----------------------
to generate Random number :-
                            import random
                            self.NameOfvariable = StringVar()  <-- StringVar is a data type
                            x = random.randint(1000,10000)
                            self.NameOfvariable(str(x))

#Create variable using self.variableName to store values to fill in Database
SYNTAX:-    self.ColumnVariableName = dataType() // here dataType means what type of datatype we have set in our database for columns

EXAMPLE:-   self.mobile = INT()
            self.name = StringVar()
            
#to fetch data from these variable follow below steps 
    1) create variable using self.varname = datatype()
    2) in ttk.Entry() write  ttk.Entry(<windowName> , textvariable = self.varname)   <-- corresspondig to every EntryField and Variable
            
=================================================================   ABOVE CODE MUST BE WRITTEN JUST AFTER THE __init__  after geometry ====================================================================================================================================================================================================================

----------------- M E N D O T O R Y    F E I L D    M S G ----------------------
#from tkinter import messagebox

condition:-
        def add_data(self):                                              <-- This is another function of 'class Cust_win: ' 
            if self.var_cust_mobile == "" or self.var_cust_pin =="":
                messagebox.showerror("<ErrorName>","<ErrorMsg>")
            else:

                try:
                    varNameToConnect1 = mysql.connector.connect(host="localhost", username="root", password="password of database which is created", database = "name of database")
                    cursorVarName = varNameToConnect1.cursor()
                    cursorVarName.execute("insert into TableName values(%s,%s,%s,%s,%s,..... upto Number of column in our table)",
                                                                                                                                (self.column1VarName.get(),
                                                                                                                                (self.column2VarName.get(),
                                                                                                                                (self.column3VarName.get(),
                                                                                                                                (self.column4VarName.get(),
                                                                                                                                (self.column5VarName.get(), ....
                                                                                                                                (self.column5VarName.get() 
                                                                                                                                
                                                                                                                                
                                                                                                                                ))
                    varNameToConnect1.commit()
                    self.fetch_data() // calling function for LINE-185
                    varNameToConnect1.close()
                    messagebox.showinfo("<Success or done or anything","Customer has been added",parent=self.root)

                except Exception as es:
                    messagebox.showarning("Warn You",f"Something went wrong: {str(es)}",parent=self.root) 

        //since we are ADDing data , so we have to call this function inside ADD-Button

        add_btn = Button(<windowName>, .........., command = self.add_data ,...........)) //<-- NOTE: do not use '()' and this command must be anywhere after <windowName> 



//---------------- Above data will be inserted into DATABASE's table [ Now to show that data in our software use below code:--------------------------------]

    def fetch_data(self):  //<-- call this function in LINE-170 and below [ self.data_table_details.pack(fill=BOTH,expand=1)] this line 
        varNameToConnect1 = mysql.connector.connect(host="localhost", username="root", password="password of database which is created", database = "name of database")
        cursorVarName = varNameToConnect1.cursor()
        cursorVarName.execute("select * from customer")

        rows = cursorVarName.fetchall()
        if len(rows)!=0:
            self.<windowName>.delete(*self.<windowName>)
            for i in rows:
                self.<windowName>.insert("",END,values=i)
            varNameToConnect1.commit()
        varNameToConnect1.close() 


